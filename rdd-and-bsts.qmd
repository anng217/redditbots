---
title: "Tables and Figures"
author: "An Nguyen"
format: revealjs
editor: visual
---

## Feedback {.smaller}

| Feedback                 | Solution                            |
|--------------------------|-------------------------------------|
| Descriptive Statistics   | Descriptive Stats and Visualization |
| Measurement Validity     | Pending                             |
| Synthesis Control Choice | Appendix                            |
| BSTS: Posterior Interval | H1: Summary                         |

## Focal Community Descriptive Statistics (1) {.smaller}

```{r routine, echo=FALSE, output = FALSE}
#rm(list = ls())

library(tidyverse)
library(dplyr)
library(ggplot2)
library(fixest)
library(rdd)
library(kableExtra)
library(knitr)
library(broom)
library(purrr)
library(psych)
library(lubridate)


#fds <- read.csv("E:/gihub-data/redditbots/fds/fds_res.csv")
```

```{r import function, echo = F, output = F}
source("redditbots_function.R")
```

```{r cleaning, echo = FALSE, output = FALSE}
fds <- read.csv("E:/gihub-data/redditbots/fds/fds_res.csv")

fds <-fds %>% 
  mutate(created_date = as_date(lubridate::as_datetime(created_utc)))

fds <- add_relDate(fds, day_zero = "2019-10-28")
```

```{r descriptive-by-date, echo = FALSE, results = FALSE}
as.data.frame(
  fds %>% group_by(created_date) %>%
  summarise(m_toxicity = round(mean(toxicity),2),
            m_identity_attack = round(mean(identity_attack),2),
            m_insult = round(mean(insult),2)))
```

```{r desc-stats1, echo = FALSE}
kable(round(
  describe(fds[c("post", "toxicity", "severe_toxicity", "obscene", 
                 "threat", "insult", "identity_attack")]) %>% 
  dplyr::select(n, mean, sd, median),3))
```

## Descriptive Statistics (2) {.smaller}

```{r desc-stats2, echo = FALSE}
fds <- fds %>%
  mutate(toxicity_f = ifelse(toxicity > 0.25,1,0),
              identity_attack_f = ifelse(identity_attack > 0.09,1,0),
              insult_f = ifelse(insult > 0.012, 1, 0))
kable(round(
  describe(fds[c("post", "toxicity_f", "insult_f", "identity_attack_f")]) %>% 
  dplyr::select(n, mean, sd, min, max),3))
```

## Descriptive Statistics (3) {.smaller}

```{r compare-post-pre-fds, echo = F, results = T}
compare_means <- t(fds %>% group_by(post)%>%
                            summarise(Toxicity = sd(toxicity),
                                   Severe_Toxicity = sd(severe_toxicity),
                                   Obscene = sd(obscene),
                                   Threat = sd(threat),
                                   Insult = sd(insult),
                                   Identity_attack = sd(identity_attack)))
colnames(compare_means) <- c("Pre", "Post")

kable(compare_means[-1,])
```

## Descriptive Statistics (4) {.smaller}

```{r t-test-cleaning, echo = FALSE, rerults = FALSE}
t.toxicity <- t.test(fds %>% filter(post == 0) %>% dplyr::select(toxicity),
             fds %>% filter(post == 1) %>% dplyr::select(toxicity))


t.insult <- t.test(fds %>% filter(post == 0) %>% dplyr::select(insult),
             fds %>% filter(post == 1) %>% dplyr::select(insult))

t.identity_attack <- t.test(fds %>% filter(post == 0) %>% dplyr::select(identity_attack),
             fds %>% filter(post == 1) %>% dplyr::select(identity_attack))
  
tab <- as.data.frame(map_df(list(t.toxicity, t.insult, t.identity_attack),tidy))

row.names(tab) <- c("Toxicity", "Insult", "Identity Attack")

tab[c("estimate", "statistic", "p.value", "conf.low", "conf.high")]
```

## Correlation Matrix (1) {.smaller .scrollable}

```{r}
kable(round(cor(fds %>% group_by(created_date) %>%
                  filter(post == 1) %>%
  summarise(m_toxicity = round(mean(toxicity),2),
            m_identity_attack = round(mean(identity_attack),2),
            m_insult = round(mean(insult),2)) %>%
  dplyr::select(-created_date)),3))
```

## Correlation Matrix (2) {.smaller .scrollable}

```{r}
kable(round(cor(fds %>% group_by(created_date) %>%
  summarise(p_toxicity = round(mean(toxicity_flag),2),
            p_identity_attack = round(mean(identity_attack_flag),2),
            p_insult = round(mean(insult_flag),2)) %>%
  dplyr::select(-created_date)),2))%>%
  kable_material(c("hover"))
```

## Three Hypotheses

-   H1: The harassment towards community members declines after the implementation of the moderation bot
-   H2: The harassment towards other outgroup members will increase in community discussion after the implementation of the bot.
-   H3: After the implementation of the bot, communities with similar topics and without bot moderation (human-only moderated communities) will experience an increase in harassment

## H1: Toxicity within the focal community

::: columns
::: {.column width="50%"}
```{r visualizing-toxicity-RDD, echo = F, output = T, warning = FALSE}
fds %>% group_by(created_date) %>%
  summarise(toxicity = mean(toxicity), relative_day = relative_day) %>%
  filter(relative_day > -16 & relative_day < 16) %>%
  dplyr::select(toxicity, relative_day) %>%
  mutate(threshold = as.factor(ifelse(relative_day >= 0, 1, 0))) %>%
  ggplot(aes(x = relative_day, y = toxicity, color = threshold)) +
  geom_point() +
  geom_smooth(method = 'lm',se = T) +
  scale_color_brewer(palette = "Accent") +
  guides(color = FALSE) +
  geom_vline(xintercept = -0.5, color = "red",
             size = 1, linetype = "dashed") +
  labs(y = "Toxicity Comments",
       x = "Days Since Treatment",
       title ="Discontinuity in Toxicity") + 
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        axis.line = element_line(colour = "black"))
```
:::

::: {.column width="50%"}
```{r visualizing-toxicity-prec-RDD, echo = F, output = T, warning = FALSE}
fds %>% group_by(created_date) %>%
  summarise(toxicity_flag = mean(toxicity_flag), relative_day = relative_day) %>%
  filter(relative_day > -16 & relative_day < 16) %>%
  dplyr::select(toxicity_flag, relative_day) %>%
  mutate(threshold = as.factor(ifelse(relative_day >= 0, 1, 0))) %>%
  ggplot(aes(x = relative_day, y = toxicity_flag, color = threshold)) +
  geom_point() +
  geom_smooth(method = 'lm',se = T) +
  scale_color_brewer(palette = "Accent") +
  guides(color = FALSE) +
  geom_vline(xintercept = -0.5, color = "red",
             size = 1, linetype = "dashed") +
  labs(y = "Toxicity Score",
       x = "Days Since Treatment",
       title = "Discontinuity in Percentage of Toxic Comments") + 
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        axis.line = element_line(colour = "black"))
```
:::
:::

## H1: Identity Attack within the focal community

::: columns
::: {.column width="50%"}
```{r visualizing-identityattack, echo = F, output = T, warning = FALSE}
fds %>% group_by(created_date) %>%
  summarise(identity_attack= mean(identity_attack), relative_day = relative_day) %>%
  filter(relative_day > -16 & relative_day < 16) %>%
  dplyr::select(identity_attack, relative_day) %>%
  mutate(threshold = as.factor(ifelse(relative_day >= 0, 1, 0))) %>%
  ggplot(aes(x = relative_day, y = identity_attack, color = threshold)) +
  geom_point() +
  geom_smooth(method = 'lm',se = T) +
  scale_color_brewer(palette = "Accent") +
  guides(color = FALSE) +
  geom_vline(xintercept = -0.5, color = "red",
             size = 1, linetype = "dashed") +
  labs(y = "Identity Attack",
       x = "Days Since Treatment",
       title ='Discontinuity in Identity Attack') + 
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        axis.line = element_line(colour = "black"))
```
:::

::: {.column width="50%"}
```{r visualizing-identityattack-prec, echo = F, output = T, warning = FALSE}
fds %>% group_by(created_date) %>%
  summarise(identity_attack_flag= mean(identity_attack_flag), relative_day = relative_day) %>%
  filter(relative_day > -16 & relative_day < 16) %>%
  dplyr::select(identity_attack_flag, relative_day) %>%
  mutate(threshold = as.factor(ifelse(relative_day >= 0, 1, 0))) %>%
  ggplot(aes(x = relative_day, y = identity_attack_flag, color = threshold)) +
  geom_point() +
  geom_smooth(method = 'lm',se = T) +
  scale_color_brewer(palette = "Accent") +
  guides(color = FALSE) +
  geom_vline(xintercept = -0.5, color = "red",
             size = 1, linetype = "dashed") +
  labs(y = "Identity Attack Percentage",
       x = "Days Since Treatment",
       title ='Discontinuity in Percentage of Identity Attack') + 
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        axis.line = element_line(colour = "black"))
```
:::
:::

## H1: Insult within the focal community

::: columns
::: {.column width="50%"}
```{r visualizing-insult, echo = F, output = T, warning = FALSE}
fds %>% group_by(created_date) %>%
  summarise(insult = mean(insult), relative_day = relative_day) %>%
  filter(relative_day > -16 & relative_day < 16) %>%
  dplyr::select(insult, relative_day) %>%
  mutate(threshold = as.factor(ifelse(relative_day >= 0, 1, 0))) %>%
  ggplot(aes(x = relative_day, y = insult, color = threshold)) +
  geom_point() +
  geom_smooth(method = 'lm',se = T) +
  scale_color_brewer(palette = "Accent") +
  guides(color = FALSE) +
  geom_vline(xintercept = -0.5, color = "red",
             size = 1, linetype = "dashed") +
  labs(y = "Insult",
       x = "Days Since Treatment",
       title ='Discontinuity in Insult') + 
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        axis.line = element_line(colour = "black"))
```
:::

::: {.column width="50%"}
```{r visualizing-insult-perc, echo = F, output = T, warning = FALSE}
fds %>% group_by(created_date) %>%
  summarise(insult_flag = mean(insult_flag), relative_day = relative_day) %>%
  filter(relative_day > -16 & relative_day < 16) %>%
  dplyr::select(insult_flag, relative_day) %>%
  mutate(threshold = as.factor(ifelse(relative_day >= 0, 1, 0))) %>%
  ggplot(aes(x = relative_day, y = insult_flag, color = threshold)) +
  geom_point() +
  geom_smooth(method = 'lm',se = T) +
  scale_color_brewer(palette = "Accent") +
  guides(color = FALSE) +
  geom_vline(xintercept = -0.5, color = "red",
             size = 1, linetype = "dashed") +
  labs(y = "Insult Percentage",
       x = "Days Since Treatment",
       title ='Discontinuity in Percentage of Insult') + 
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        axis.line = element_line(colour = "black"))
```
:::
:::

## H1: Synthetic Control

-   Part 2: Synthetic Control DiD with `synthdid`

-   Part 1: Bayesian Structural Time Series Model with `Causal Impact`

```{r packages-for-bsts-and-gsynth, echo = FALSE, results = FALSE}
library(data.table)
library(lubridate)
library(CausalImpact)
library(synthdid)
```

## Synthetic Control DiD (1)

```{r clean-data-for-BSTS-and-gsynth, echo = F, results = F, warning = FALSE}
# Load and clean
fds_bsts <- agg_data("E:/gihub-data/redditbots/fds/fds_res.csv",
                  ia_thresh = 0.0115, insult_thresh = 0.0915, toxic_thresh = 0.25)
fm_bsts <- agg_data("E:/gihub-data/redditbots/control-fds/feminism_res.csv",
                 ia_thresh = 0.016, insult_thresh = 0.052, toxic_thresh = 0.17)
twoX_bsts <- agg_data("E:/gihub-data/redditbots/control-fds/twoX_res.csv",
                   ia_thresh = 0.0067, insult_thresh = 0.056, toxic_thresh = 0.171)
wvsp_bsts <- agg_data("E:/gihub-data/redditbots/control-fds/wvsp_res.csv",
                   ia_thresh = 0.031, insult_thresh = 0.0304, toxic_thresh = 0.11)
trollX_bsts <- agg_data("E:/gihub-data/redditbots/control-fds/trollX_res.csv",
                     ia_thresh = 0.058, insult_thresh = 0.058, toxic_thresh = 0.17)
mgtow_bsts <- agg_data("E:/gihub-data/redditbots/control-fds/mgtow_res.csv",
                    ia_thresh = 0.016, insult_thresh = 0.095, toxic_thresh = 0.245)
trp_bsts <- agg_data("E:/gihub-data/redditbots/control-fds/TheRedPill_res.csv",
                  ia_thresh = 0.016, insult_thresh = 0.105, toxic_thresh = 0.271)
#Added Sep 21
#aita_bsts <- agg_data("E:/gihub-data/redditbots/control-fds/AITA_res.csv",
#                  ia_thresh = 0.5, insult_thresh = 0.5, toxic_thresh = 0.5)
askreddit_bsts <- agg_data("E:/gihub-data/redditbots/control-fds/askreddit_res.csv",
                  ia_thresh = 0.5, insult_thresh = 0.5, toxic_thresh = 0.5)
gender_bsts <- agg_data("E:/gihub-data/redditbots/control-fds/gendercritical_res.csv",
                  ia_thresh = 0.5, insult_thresh = 0.5, toxic_thresh = 0.5)
#relationship_bsts <- agg_data("E:/gihub-data/redditbots/control-fds/relationshipadvice_res.csv",
#                  ia_thresh = 0.5, insult_thresh = 0.5, toxic_thresh = 0.5)
#unpopular_bsts <- agg_data("E:/gihub-data/redditbots/control-fds/unpopularopinion_res.csv",
#                  ia_thresh = 0.5, insult_thresh = 0.5, toxic_thresh = 0.5)
purple_bsts <- agg_data("E:/gihub-data/redditbots/control-fds/purple_test1.csv",
                  ia_thresh = 0.5, insult_thresh = 0.5, toxic_thresh = 0.5)

# Add pre, post
fds_bsts <- add_relDate(fds_bsts, day_zero = "2019-10-28")
fm_bsts <- add_relDate(fm_bsts, day_zero = "2019-10-28")
twoX_bsts <- add_relDate(twoX_bsts, day_zero = "2019-10-28")
wvsp_bsts <- add_relDate(wvsp_bsts, day_zero = "2019-10-28")
trollX_bsts <- add_relDate(trollX_bsts, day_zero = "2019-10-28")
mgtow_bsts <- add_relDate(mgtow_bsts, day_zero = "2019-10-28")
trp_bsts <- add_relDate(trp_bsts, day_zero = "2019-10-28")
#Added Sep 21
#aita_bsts <- add_relDate(aita_bsts, day_zero = "2019-10-28")
askreddit_bsts <- add_relDate(askreddit_bsts, day_zero = "2019-10-28")
gender_bsts <- add_relDate(gender_bsts, day_zero = "2019-10-28")
#relationship_bsts <- add_relDate(relationship_bsts, day_zero = "2019-10-28")
#unpopular_bsts <- add_relDate(unpopular_bsts, day_zero = "2019-10-28")
purple_bsts <- add_relDate(purple_bsts, day_zero = "2019-10-28")


# Take subscribers ----
fds_subsc <- subscriber_num(
  source_dir = "E:/gihub-data/redditbots/fds/fds_clean_subm.csv",
  from_date = "2019-09-28", to_date = "2019-11-27")

fm_subsc <- subscriber_num(
  source_dir = "E:/gihub-data/redditbots/control-fds/feminism_subsc.csv",
  from_date = "2019-09-28", to_date = "2019-11-27")

twoX_subsc <- subscriber_num(
  source_dir = "E:/gihub-data/redditbots/control-fds/twoX_subsc.csv",
  from_date = "2019-09-28", to_date = "2019-11-27")

wvsp_subsc <- subscriber_num(
  source_dir = "E:/gihub-data/redditbots/control-fds/wvsp_subsc.csv",
  from_date = "2019-09-28", to_date = "2019-11-27")

trollX_subsc <- subscriber_num(
  source_dir = "E:/gihub-data/redditbots/control-fds/trollX_subsc.csv",
  from_date = "2019-09-28", to_date = "2019-11-27")

trp_subsc <- subscriber_num(
  source_dir = "E:/gihub-data/redditbots/control-fds/trp_subsc.csv",
  from_date = "2019-09-28", to_date = "2019-11-27")

mgtow_subsc <- subscriber_num(
  source_dir = "E:/gihub-data/redditbots/control-fds/mgtow_subsc.csv",
  from_date = "2019-09-28", to_date = "2019-11-27")

#Added Sep 21
#aita_subsc <- subscriber_num(
#  source_dir = "E:/gihub-data/redditbots/control-fds/AITA_subsc.csv",
#  from_date = "2019-09-28", to_date = "2019-11-27")

askreddit_subsc <- subscriber_num(
  source_dir = "E:/gihub-data/redditbots/control-fds/askreddit_subsc.csv",
  from_date = "2019-09-28", to_date = "2019-11-27")

gender_bsts <- subscriber_num(
  source_dir = "E:/gihub-data/redditbots/control-fds/gendercritical_subsc.csv",
  from_date = "2019-09-28", to_date = "2019-11-27")

#relationship_subsc <- subscriber_num(
#  source_dir = "E:/gihub-data/redditbots/control-fds/relationshipadvice_subsc.csv",
#  from_date = "2019-09-28", to_date = "2019-11-27")

#unpopular_subsc <- subscriber_num(
#  source_dir = "E:/gihub-data/redditbots/control-fds/unpopularopinion_subsc.csv",
#  from_date = "2019-09-28", to_date = "2019-11-27")

purple_subsc <- subscriber_num(
  source_dir = "E:/gihub-data/redditbots/control-fds/purple_subsc.csv",
  from_date = "2019-09-28", to_date = "2019-11-27")
```

```{r data-for-is-synth, echo = F, results= T, warning=F}
#1 is treated

id <- rep(1,61)
treated <- c(rep(0,30),rep(1,31))
treated_fds <- cbind(id, fds_bsts["created_date"], fds_bsts["identity_attack"], 
                 fds_bsts["post"], treated)

treated <- rep(0,61)
id <- rep(2,61)
control_fm <- cbind(id, fm_bsts["created_date"],
                    fm_bsts["identity_attack"],
                    fm_bsts["post"], treated)

id <- rep(3,61)
control_twoX <- cbind(id, twoX_bsts["created_date"],
                      twoX_bsts["identity_attack"],
                      twoX_bsts["post"], treated)

id <- rep(4,61)
control_wvsp <- cbind(id, wvsp_bsts["created_date"],
                        wvsp_bsts["identity_attack"], 
                        wvsp_bsts["post"], treated)

id <- rep(5,61)
control_trollX <- cbind(id, trollX_bsts["created_date"],
                        trollX_bsts["identity_attack"], 
                        trollX_bsts["post"], treated)

id <- rep(6,61)
control_mgtow <- cbind(id, mgtow_bsts["created_date"],
                       mgtow_bsts["identity_attack"],
                       mgtow_bsts["post"], treated)

id <- rep(7,61)
control_trp <- cbind(id, trp_bsts["created_date"],
                     trp_bsts["identity_attack"], 
                     trp_bsts["post"], treated)

#id <- rep(8,61)
#control_aita <- cbind(id, aita_bsts["created_date"],
#                     aita_bsts["identity_attack"], 
#                     aita_bsts["post"], treated)

id <- rep(9,61)
control_askreddit <- cbind(id, askreddit_bsts["created_date"],
                     askreddit_bsts["identity_attack"], 
                     askreddit_bsts["post"], treated)

id <- rep(10,61)
control_gender <- cbind(id, gender_bsts["created_date"],
                     gender_bsts["identity_attack"], 
                    gender_bsts["post"], treated)

#id <- rep(11,61)
#control_relationship <- cbind(id, relationship_bsts["created_date"],
#                     relationship_bsts["identity_attack"], 
#                     relationship_bsts["post"], treated)

#id <- rep(12,61)
#control_unpopular <- cbind(id, unpopular_bsts["created_date"],
#                     unpopular_bsts["identity_attack"], 
#                     unpopular_bsts["post"], treated)

id <- rep(13,61)
control_purple <- cbind(id, purple_bsts["created_date"],
                     purple_bsts["identity_attack"], 
                     purple_bsts["post"], treated)

test <- rbind(treated_fds, control_fm, control_twoX, control_trollX, control_wvsp,
              control_mgtow, control_trp, #control_aita, 
              control_askreddit,
              control_gender, control_relationship, 
              #control_unpopular, 
              control_purple)

#ia_m_gsynth <- cbind(rep(1,61), fds_bsts["created_date"],
#  fds_bsts["identity_attack"], fds_bsts["post"],
#  fm_bsts["identity_attack"], fm_subsc["subscriber"],
#  twoX_bsts["identity_attack"], twoX_subsc["subscriber"],
#  trollX_bsts["identity_attack"], trollX_subsc["subscriber"],
#  mgtow_bsts["identity_attack"], mgtow_subsc["subscriber"],
#  trp_bsts["identity_attack"], trp_subsc["subscriber"])

#names(ia_m_gsynth) <- c("unit.id", "time" ,"Y", "post", "fm_ia", "fm_subsc",
#                        "twoX_ia","twoX_subsc", "trollX_ia", "trollX_subsc",
#                        "mgtow_ia", "mgtow_subsc", "trp_ia", "trp_subsc")
#ia_m_gsynth <- ia_m_gsynth %>% 
#  mutate(l.Y = log(Y),
#         l.fm_ia = log(fm_ia), 
#         l.twoX_ia = log(twoX_ia),
#         l.trollX_ia = log(trollX_ia),
#         l.mgtow_ia = log(mgtow_ia),
#         l.trp_ia = log(trp_ia))

#ia_m_gsynth
```

```{r synthdid, echo = F, results = T}
test_prep <- panel.matrices(test, unit = 1, time = 2, outcome = 3, treatment = 5)
mod <- synthdid_estimate(test_prep$Y, test_prep$N0, test_prep$T0)
summary(mod)
```

## Synthetic Control DiD {.smaller}

```{r plotting-synthetic-did, echo = F, results = F}
plot(mod, se.method='placebo')
```

## H1 - Summary - BSTS {.smaller .scrollable}

-   Results of BSTS:

|                                  | 95% Confidence <br>Interval | Posterior <br>Prob. Of <br>Causal Effect |
|------------------------|--------------------|----------------------------|
| Insult - Score Mean              | \[-0.035, 0.0068\]          | 94%                                      |
| Insult - Log Score Mean          | \[-0.29, 0.0069\]           | 96.774%                                  |
| Insult - Percentage              | \[-0.049, 0.034\]           | 88%                                      |
| Identity Attack - Score Mean     | \[-0.011, -0.0016\]         | 99.90%                                   |
| Identity Attack - Log Score Mean | \[-0.82, -0.073\]           | 99.78%                                   |
| Identity Attack - Percentage     | \[-0.049, 0.035\]           | 82%                                      |

## BSTS - Summary of BSTS communities used for synthetic control

| Community | Gender-focus (F) | Gender-Focus (M) | Add the bot later | Popular |
|---|---|---|---|---|
| r/feminism | x |  |  |  |
| r/twoXchromosomes | x |  |  |  |
| r/trollXchromosomes | x |  |  |  |
| r/witchesvspatriarchy | x |  | x |  |
| r/mgtow |  | x |  |  |
| r/TheRedPill |  | x |  |  |
| r/AmItheAsshole |  |  |  | x |
| r/AskReddit |  |  |  | x |
| r/gender_critical | x | x |  |  |
| r/relationship_advice | x |  |  |  |
| r/unpopular_opinion | x | x |  |  |
| r/purplepilldebate | x | x |  |  |
| Model 1 | x | x | x | x |
| Model 2 | x | x |  | x |
| Model 3 | x | x |  | x |

## BSTS Model 1 - Identity Attack - Score Mean (1)

```{r bsts-model-identity-attack-1, echo = FALSE, results = TRUE}
pre_period <- c(1, 30)
post_period <- c(31, 61)

identity_attack_m1 <- cbind(
  fds_bsts["identity_attack"], 
  fm_bsts["identity_attack"], fm_subsc["subscriber"],
  twoX_bsts["identity_attack"], twoX_subsc["subscriber"],
  trollX_bsts["identity_attack"], trollX_subsc["subscriber"],
  wvsp_bsts["identity_attack"], wvsp_subsc["subscriber"],
  mgtow_bsts["identity_attack"], mgtow_subsc["subscriber"],
  trp_bsts["identity_attack"], trp_subsc["subscriber"],
  aita_bsts["identity_attack"], aita_subsc["subscriber"],
  askreddit_bsts["identity_attack"], askreddit_subsc["subscriber"],
  gender_bsts["identity_attack"], gender_subsc["subscriber"],
  relationship_bsts["identity_attack"], relationship_subsc["subscriber"],
  unpopular_bsts["identity_attack"], unpopular_subsc["subscriber"],
  purple_bsts["identity_attack"], purple_subsc["subscriber"]
  )

names(identity_attack_m1) <- c("Y", "fm_ia", "fm_subsc", "twoX_ia","twoX_subsc", 
                              "trollX_ia", "trollX_subsc", "wvsp_ia", "wvsp_subsc",
                              "mgtow_ia", "mgtow_subsc", 
                              "trp_ia", "trp_subsc", "aita_ia", "aita_subsc",
                              "askreddit_ia", "askreddit_subsc",
                              "gender_ia", "gender_subsc", "relationship_ia", "relationship_subsc",
                              "unpopular_ia", "unpopular_subsc", "purple_ia", "purple_subsc")

identity_attack_m_impact1 <- CausalImpact(identity_attack_m1, pre_period,
                                         post_period, 
                                         model.args = list(niter = 5000, nseasons = 7))

plot(identity_attack_m_impact1)
```

## BSTS Model 1 - Identity Attack - Score Mean (2)

```{r bsts-model-identity-attack-2, echo = FALSE, results = TRUE}
summary(identity_attack_m_impact1)
```

## BSTS Model 1 - Identity Attack - Log Score Mean (1)

```{r bsts-identity-log-1, echo = F, results = F}
l.identity_attack_m1 <- identity_attack_m1 %>% 
  mutate(Y = log(Y),
         l.fm_ia = log(fm_ia), 
         l.twoX_ia = log(twoX_ia),
         l.trollX_ia = log(trollX_ia),
         l.wvsp_ia = log(wvsp_ia),
         l.mgtow_ia = log(mgtow_ia),
         l.trp_ia = log(trp_ia),
         l.iata_ia = log(iata_ia),
         l.askreddit_ia = log(ask_ia),
         l.gender_ia = log(gender_ia),
         l.relationship_ia = log(relationship_ia),
         l.unpopular_ia = log(unpopular_ia),
         l.purple_ia = log(purple_ia))

l.identity_attack_m_impact1 <- CausalImpact(l.identity_attack_m1, pre_period,
                                         post_period, 
                                         model.args = list(niter = 5000, nseasons = 7))

plot(l.identity_attack_m_impact1)
```

## BSTS Model 1 - Identity Attack - Log Score Mean (2)

```{r bsts-identity-log-2, echo = F, results = T}
summary(l.identity_attack_m_impact1)
```

## BSTS Model 2 - Identity Attack - Score Mean (1)

```{r bsts-model2-identity-attack-1, echo = FALSE, results = TRUE}
identity_attack_m2 <- cbind(
  fds_bsts["identity_attack"], 
  fm_bsts["identity_attack"], fm_subsc["subscriber"],
  twoX_bsts["identity_attack"], twoX_subsc["subscriber"],
  mgtow_bsts["identity_attack"], mgtow_subsc["subscriber"],
  trp_bsts["identity_attack"], trp_subsc["subscriber"],
  askreddit_bsts["identity_attack"], askreddit_subsc["subscriber"],
  gender_bsts["identity_attack"], gender_subsc["subscriber"],
  relationship_bsts["identity_attack"], relationship_subsc["subscriber"],
  unpopular_bsts["identity_attack"], unpopular_subsc["subscriber"],
  purple_bsts["identity_attack"], purple_subsc["subscriber"]
  )

names(identity_attack_m2) <- c("Y", "fm_ia", "fm_subsc", "twoX_ia","twoX_subsc", 
                               "mgtow_ia", "mgtow_subsc", 
                              "trp_ia", "trp_subsc", "aita_ia", "aita_subsc",
                              "askreddit_ia", "askreddit_subsc",
                              "gender_ia", "gender_subsc", "relationship_ia", "relationship_subsc",
                              "unpopular_ia", "unpopular_subsc", "purple_ia", "purple_subsc")

identity_attack_m_impact2 <- CausalImpact(identity_attack_m1, pre_period,
                                         post_period, 
                                         model.args = list(niter = 5000, nseasons = 7))

plot(identity_attack_m_impact2)
```


## BSTS Model 2 - Identity Attack - Score Mean (2)

```{r bsts-model2-identity-attack-2, echo = FALSE, results = TRUE}
summary(identity_attack_m_impact2)
```

## BSTS Model 2 - Identity Attack - Log Score Mean (1)

```{r bsts-model2-identity-log-1, echo = F, results = F}
l.identity_attack_m2 <- identity_attack_m2 %>% 
  mutate(Y = log(Y),
         l.fm_ia = log(fm_ia), 
         l.twoX_ia = log(twoX_ia),
         l.trollX_ia = log(trollX_ia),
         l.mgtow_ia = log(mgtow_ia),
         l.trp_ia = log(trp_ia),
         l.iata_ia = log(iata_ia),
         l.askreddit_ia = log(ask_ia),
         l.gender_ia = log(gender_ia),
         l.relationship_ia = log(relationship_ia),
         l.unpopular_ia = log(unpopular_ia),
         l.purple_ia = log(purple_ia))

l.identity_attack_m_impact2 <- CausalImpact(l.identity_attack_m2, pre_period,
                                         post_period, 
                                         model.args = list(niter = 5000, nseasons = 7))

plot(l.identity_attack_m_impact2)
```

## BSTS Model 2 - Identity Attack - Log Score Mean (2)

```{r bsts-model2-identity-attack-2, echo = FALSE, results = TRUE}
summary(l.identity_attack_m_impact2)
```

## BSTS - Identity Attack - Percentage 

All percentage Not updated yet, 6 new community does not have a threshhold yet
```{r clean-data-for-bsts-perc-2, echo = F, results = T}
identity_attack_f <- cbind(
  fds_bsts["identity_attack_p"], 
  fm_bsts["identity_attack_p"], fm_subsc["subscriber"],
  twoX_bsts["identity_attack_p"], twoX_subsc["subscriber"],
  trollX_bsts["identity_attack_p"], trollX_subsc["subscriber"],
  mgtow_bsts["identity_attack_p"], mgtow_subsc["subscriber"],
  trp_bsts["identity_attack_p"], trp_subsc["subscriber"]
)

names(identity_attack_f) <- c("Y", "fm_ia", "fm_subsc", "twoX_ia","twoX_subsc", 
                              "trollX_ia", "troll_subsc", "mgtow_ia", "mgtow_subsc", 
                              "trp_ia", "trp_subsc")

identity_attack_f_impact <- CausalImpact(identity_attack_f, pre_period, post_period, 
                                         model.args = list(niter = 5000, nseasons = 7))

plot(identity_attack_f_impact)
```

## BSTS - Identity Attack - Percentage
Not updated yet, 6 new community does not have a threshhold yet
```{r bsts-model-identity-attack-perc-2, echo = F, results = T}
summary(identity_attack_f_impact)
```

## BSTS - Insult - Score Mean (1)

```{r bsts-model-insult-1, echo = F, results = T}
insult_m <- cbind(
  fds_bsts["insult"], 
  fm_bsts["insult"], fm_subsc["subscriber"],
  twoX_bsts["insult"], twoX_subsc["subscriber"],
  trollX_bsts["insult"], trollX_subsc["subscriber"],
  mgtow_bsts["insult"], mgtow_subsc["subscriber"],
  trp_bsts["insult"], trp_subsc["subscriber"]
)

names(insult_m) <- c("Y", "fm_ins", "fm_subsc", "twoX_ins","twoX_subsc", 
                              "trollX_ins", "troll_subsc", "mgtow_ins", "mgtow_subsc", 
                              "trp_ins", "trp_subsc")

insult_m_impact <- CausalImpact(insult_m, pre_period, post_period, 
                                         model.args = list(niter = 5000, nseasons = 7))

plot(insult_m_impact)
```

## BSTS - Insult - Score Mean (2)

```{r bsts-model-insult-2, echo = FALSE, results = TRUE}
summary(insult_m_impact)
```

## BSTS - Insult - Log Score Mean (3)

```{r bsts-insult-log-1, echo = F, results = F}
l.insult_m <- insult_m %>% 
  mutate(Y = log(Y),
         l.fm_ins = log(fm_ins), 
         l.twoX_ins = log(twoX_ins),
         l.trollX_ins = log(trollX_ins),
         l.mgtow_ins = log(mgtow_ins),
         l.trp_ins = log(trp_ins))

l.insult_m_impact <- CausalImpact(l.insult_m, pre_period,
                                         post_period, 
                                         model.args = list(niter = 5000, nseasons = 7))

plot(l.insult_m_impact)
```

## BSTS - Insult - Log Score Mean (4)

```{r bsts-insult-log-2, echo = F, results = T}
summary(l.insult_m_impact)
```

## BSTS - Insult - Percentage (5)

```{r bsts-model-insult-perc, echo = F, results =T }
insult_f <- cbind(
  fds_bsts["insult_p"], 
  fm_bsts["insult_p"], fm_subsc["subscriber"],
  twoX_bsts["insult_p"], twoX_subsc["subscriber"],
  trollX_bsts["insult_p"], trollX_subsc["subscriber"],
  mgtow_bsts["insult_p"], mgtow_subsc["subscriber"],
  trp_bsts["insult_p"], trp_subsc["subscriber"]
)

names(insult_f) <- c("Y", "fm_ins", "fm_subsc", "twoX_ins","twoX_subsc", 
                              "trollX_ins", "troll_subsc", "mgtow_ins",
                              "mgtow_subsc", "trp_ins", "trp_subsc")

insult_f_impact <- CausalImpact(insult_f, pre_period, post_period, 
                                         model.args = list(niter = 5000, nseasons = 7))

plot(insult_f_impact)
```

## BSTS - Insult - Percentage (6)

```{r bsts-model-insult-perc-2, echo = F, results =T }
summary(insult_f_impact)
```

               |                                  |

## H2 - Analysis Plan

H2: The harassment towards other outgroup members will increase in community discussion after the implementation of the bot. Plan: - Using topic modeling to classify the target in each comment - Aggregating scores for comments targeting women and men before and after the bot implementaiton - Identifying Causal effect with BSTS on topics targeting men

## H3 - Analysis - r/feminism

```{r fm-discontinuity}
fm_bsts %>% group_by(created_date) %>%
  summarise(identity_attack = mean(identity_attack), relative_day = relative_day) %>%
  filter(relative_day > -16 & relative_day < 16) %>%
  dplyr::select(identity_attack, relative_day) %>%
  mutate(threshold = as.factor(ifelse(relative_day >= 0, 1, 0))) %>%
  ggplot(aes(x = relative_day, y = identity_attack, color = threshold)) +
  geom_point() +
  geom_smooth(method = 'lm',se = T) +
  scale_color_brewer(palette = "Accent") +
  guides(color = FALSE) +
  geom_vline(xintercept = -0.5, color = "red",
             size = 1, linetype = "dashed") +
  labs(y = "Identity Attack Comments", 
       x = "Days Since Treatment",
       title ="Discontinuity in Identity Attack") + 
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        axis.line = element_line(colour = "black"))
```
## H3 - Analysis - r/feminism
```{r fm-identity-attack-plot, echo = F, results = T}
m_bsts %>%
  filter(relative_day > -5 & relative_day < 5) %>%
  dplyr::select(identity_attack, relative_day) %>%
  mutate(threshold = as.factor(ifelse(relative_day >= 0, 1, 0))) %>%
  ggplot(aes(x = relative_day, y = identity_attack, color = threshold)) +
  geom_point() +
  geom_smooth(method = 'lm',se = T) +
  scale_color_brewer(palette = "Accent") +
  guides(color = FALSE) +
  geom_vline(xintercept = -0.5, color = "red",
             size = 1, linetype = "dashed") +
  labs(y = "Identity Attack Comments", 
       x = "Days Since Treatment",
       title ="Discontinuity in Identity Attack") + 
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        axis.line = element_line(colour = "black"))
```

# Appendix

## Appendix 1: Corellation Matrix of all vars (1) {.smaller}

Average of Score by Date

```{r, echo = FALSE}
kable(
  round(
  cor(fds %>% group_by(created_date) %>%
  summarise(toxicity = mean(toxicity),
            identity_attack = mean(identity_attack),
            insult = mean(insult),
            obscene = mean(obscene),
            threat = mean(threat),
            severe_toxicity = mean(severe_toxicity))%>%
    dplyr::select(-created_date)),2))
```

## Appendix 1: Corellation Matrix of all vars (2) {.smaller}

Percentage of comment flagged by Date

```{r, echo = FALSE}
kable(round(cor(fds %>% group_by(created_date) %>%
  summarise(toxicity = round(mean(toxicity_flag),2),
            identity_attack = round(mean(identity_attack_flag),2),
            insult = round(mean(insult_flag),2),
            obscene = round(mean(obscene_flag),2),
            threat = round(mean(threat_flag),2),
            severe_toxicity = round(mean(severe_toxicity),2)) %>%
  dplyr::select(-created_date)),2))%>%
  kable_material("hover")
```

## Appendix 2: T-test on all variables {.smaller}

```{r t-test-all-pre-post, echo = FALSE}
t.toxicity <- t.test(fds %>% filter(post == 0) %>% dplyr::select(toxicity),
             fds %>% filter(post == 1) %>% dplyr::select(toxicity))

t.toxicity_serv <- t.test(fds %>% filter(post == 0) %>% dplyr::select(severe_toxicity),
             fds %>% filter(post == 1) %>% dplyr::select(severe_toxicity))

t.obscene <- t.test(fds %>% filter(post == 0) %>% dplyr::select(obscene),
             fds %>% filter(post == 1) %>% dplyr::select(obscene))

t.threat <- t.test(fds %>% filter(post == 0) %>% dplyr::select(threat),
             fds %>% filter(post == 1) %>% dplyr::select(threat))

t.insult <- t.test(fds %>% filter(post == 0) %>% dplyr::select(insult),
             fds %>% filter(post == 1) %>% dplyr::select(insult))

t.identity_attack <- t.test(fds %>% filter(post == 0) %>% dplyr::select(identity_attack),
             fds %>% filter(post == 1) %>% dplyr::select(identity_attack))
  
tab_all <- as.data.frame(map_df(list(t.toxicity, t.toxicity_serv, t.obscene,
                                 t.threat, t.insult, t.identity_attack),tidy))

row.names(tab_all) <- c("Toxicity", "Severe_Toxicity", "Obscene", "Threat", "Insult", "Identity Attack")

tab_all[c("estimate", "statistic", "p.value", "conf.low", "conf.high")] %>%
  mutate_if(is.numeric,round, 4) %>%
  kable()%>%
  kable_material("hover")
```

## Appendix 2: t_test on percentage w/ adjusted threshold

```{r t-test-perc-pre-post, echo = FALSE}
t.toxicity_p <- t.test(fds_bsts %>% filter(post == 0) %>% dplyr::select(toxicity_p),
             fds_bsts %>% filter(post == 1) %>% dplyr::select(toxicity_p))

t.toxicity_serv_p <- t.test(fds_bsts %>% filter(post == 0) %>% dplyr::select(severe_toxicity_p),
             fds_bsts %>% filter(post == 1) %>% dplyr::select(severe_toxicity_p))

t.obscene_p <- t.test(fds_bsts %>% filter(post == 0) %>% dplyr::select(obscene_p),
             fds_bsts %>% filter(post == 1) %>% dplyr::select(obscene_p))

t.threat_p <- t.test(fds_bsts %>% filter(post == 0) %>% dplyr::select(threat_p),
             fds_bsts %>% filter(post == 1) %>% dplyr::select(threat_p))

t.insult_p <- t.test(fds_bsts %>% filter(post == 0) %>% dplyr::select(insult_p),
             fds_bsts %>% filter(post == 1) %>% dplyr::select(insult_p))

t.identity_attack_p <- t.test(fds_bsts %>% filter(post == 0) %>% dplyr::select(identity_attack_p),
             fds_bsts %>% filter(post == 1) %>% dplyr::select(identity_attack_p))

tab_all_p <- as.data.frame(map_df(list(t.toxicity_p, t.toxicity_serv_p, t.obscene_p,
                                 t.threat_p, t.insult_p, t.identity_attack_p),tidy))

row.names(tab_all_p) <- c("Toxicity", "Severe_Toxicity", "Obscene", "Threat", "Insult", "Identity Attack")


tab_all_p[c("estimate", "statistic", "p.value", "conf.low", "conf.high")] %>%
  mutate_if(is.numeric,round, 4) %>%
  kable()%>%
  kable_material("hover")
```

## Appendix 3: RDD for f/feminism

::: columns
::: {.column width="50%"}
```{r rrd-fem-ia, echo = F, results = T, warning = FALSE}
fm_bsts$relative_day <- difftime(fm_bsts$time,as.Date('2019-10-28', "%Y-%m-%d"), units = "days")
fm_bsts$relative_day <- as.numeric(fm_bsts$relative_day)

fm_bsts %>% group_by(time) %>%
  summarise(identity_attack= mean(identity_attack), relative_day = relative_day) %>%
  filter(relative_day > -16 & relative_day < 16) %>%
  dplyr::select(identity_attack, relative_day) %>%
  mutate(threshold = as.factor(ifelse(relative_day >= 0, 1, 0))) %>%
  ggplot(aes(x = relative_day, y = identity_attack, color = threshold)) +
  geom_point() +
  geom_smooth(method = 'lm',se = T) +
  scale_color_brewer(palette = "Accent") +
  guides(color = FALSE) +
  geom_vline(xintercept = -0.5, color = "red",
             size = 1, linetype = "dashed") +
  labs(y = "Identity Attack",
       x = "Days Since Treatment",
       title ='Discontinuity in Identity Attack') + 
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        axis.line = element_line(colour = "black"))
```
:::

::: {.column width="50%"}
```{r rrd-fem-insult, echo = F, results = T, warning = FALSE}
fm_bsts %>% group_by(time) %>%
  summarise(insult= mean(insult), relative_day = relative_day) %>%
  filter(relative_day > -16 & relative_day < 16) %>%
  dplyr::select(insult, relative_day) %>%
  mutate(threshold = as.factor(ifelse(relative_day >= 0, 1, 0))) %>%
  ggplot(aes(x = relative_day, y = insult, color = threshold)) +
  geom_point() +
  geom_smooth(method = 'lm',se = T) +
  scale_color_brewer(palette = "Accent") +
  guides(color = FALSE) +
  geom_vline(xintercept = -0.5, color = "red",
             size = 1, linetype = "dashed") +
  labs(y = "Insult",
       x = "Days Since Treatment",
       title ='Discontinuity in Insult') + 
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        axis.line = element_line(colour = "black"))
```
:::
:::

## Appendix 3: RDD for r/TwoXChromosomes

::: columns
::: {.column width="50%"}
```{r rrd-twoX-ia, echo = F, results = T, warning = FALSE}
twoX_bsts$relative_day <- difftime(twoX_bsts$time,as.Date('2019-10-28', "%Y-%m-%d"), units = "days")
twoX_bsts$relative_day <- as.numeric(twoX_bsts$relative_day)

twoX_bsts %>% group_by(time) %>%
  summarise(identity_attack= mean(identity_attack), relative_day = relative_day) %>%
  filter(relative_day > -16 & relative_day < 16) %>%
  dplyr::select(identity_attack, relative_day) %>%
  mutate(threshold = as.factor(ifelse(relative_day >= 0, 1, 0))) %>%
  ggplot(aes(x = relative_day, y = identity_attack, color = threshold)) +
  geom_point() +
  geom_smooth(method = 'lm',se = T) +
  scale_color_brewer(palette = "Accent") +
  guides(color = FALSE) +
  geom_vline(xintercept = -0.5, color = "red",
             size = 1, linetype = "dashed") +
  labs(y = "Identity Attack",
       x = "Days Since Treatment",
       title ='Discontinuity in Identity Attack') + 
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        axis.line = element_line(colour = "black"))
```
:::

::: {.column width="50%"}
```{r rrd-twoX-insult, echo = F, results = T, warning = FALSE}
twoX_bsts %>% group_by(time) %>%
  summarise(insult= mean(insult), relative_day = relative_day) %>%
  filter(relative_day > -16 & relative_day < 16) %>%
  dplyr::select(insult, relative_day) %>%
  mutate(threshold = as.factor(ifelse(relative_day >= 0, 1, 0))) %>%
  ggplot(aes(x = relative_day, y = insult, color = threshold)) +
  geom_point() +
  geom_smooth(method = 'lm',se = T) +
  scale_color_brewer(palette = "Accent") +
  guides(color = FALSE) +
  geom_vline(xintercept = -0.5, color = "red",
             size = 1, linetype = "dashed") +
  labs(y = "Insult",
       x = "Days Since Treatment",
       title ='Discontinuity in Insult') + 
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        axis.line = element_line(colour = "black"))
```
:::
:::

## Appendix 3: RDD for r/TrollXChromosomes

::: columns ::: {.column width="50%"}

```{r rrd-trollX-ia, echo = F, results = T, warning = FALSE}
trollX_bsts$relative_day <- difftime(trollX_bsts$time,as.Date('2019-10-28', "%Y-%m-%d"), units = "days")
trollX_bsts$relative_day <- as.numeric(trollX_bsts$relative_day)

trollX_bsts %>% group_by(time) %>%
  summarise(identity_attack= mean(identity_attack), relative_day = relative_day) %>%
  filter(relative_day > -16 & relative_day < 16) %>%
  dplyr::select(identity_attack, relative_day) %>%
  mutate(threshold = as.factor(ifelse(relative_day >= 0, 1, 0))) %>%
  ggplot(aes(x = relative_day, y = identity_attack, color = threshold)) +
  geom_point() +
  geom_smooth(method = 'lm',se = T) +
  scale_color_brewer(palette = "Accent") +
  guides(color = FALSE) +
  geom_vline(xintercept = -0.5, color = "red",
             size = 1, linetype = "dashed") +
  labs(y = "Identity Attack",
       x = "Days Since Treatment",
       title ='Discontinuity in Identity Attack') + 
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        axis.line = element_line(colour = "black"))
```

:::

::: {.column width="50%"}

```{r rrd-trollX-insult, echo = F, results = T, warning = FALSE}
trollX_bsts %>% group_by(time) %>%
  summarise(insult= mean(insult), relative_day = relative_day) %>%
  filter(relative_day > -16 & relative_day < 16) %>%
  dplyr::select(insult, relative_day) %>%
  mutate(threshold = as.factor(ifelse(relative_day >= 0, 1, 0))) %>%
  ggplot(aes(x = relative_day, y = insult, color = threshold)) +
  geom_point() +
  geom_smooth(method = 'lm',se = T) +
  scale_color_brewer(palette = "Accent") +
  guides(color = FALSE) +
  geom_vline(xintercept = -0.5, color = "red",
             size = 1, linetype = "dashed") +
  labs(y = "Insult",
       x = "Days Since Treatment",
       title ='Discontinuity in Insult') + 
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        axis.line = element_line(colour = "black"))
```

## Appendix 4: Descriptive stats of other communities (1) {.smaller}

r/feminism

```{r compare-pre-post-fem, echo = F, results = T}
compare_means_fm <- t(fm_bsts %>% group_by(post)%>%
                            summarise(Toxicity = mean(toxicity),
                                   Severe_Toxicity = mean(severe_toxicity),
                                   Obscene = mean(obscene),
                                   Threat = mean(threat),
                                   Insult = mean(insult),
                                   Identity_attack = mean(identity_attack)))
colnames(compare_means_fm) <- c("Pre", "Post")

kable(compare_means_fm[-1,]) %>%
  kable_material("hover")
```

## Appendix 4: Descriptive stats of other communities (2) {.smaller}

r/TwoXChromosomes

```{r compare-pre-post-twoX, echo = F, results = T}
compare_means_twoX <- t(twoX_bsts %>% group_by(post)%>%
                            summarise(Toxicity = mean(toxicity),
                                   Severe_Toxicity = mean(severe_toxicity),
                                   Obscene = mean(obscene),
                                   Threat = mean(threat),
                                   Insult = mean(insult),
                                   Identity_attack = mean(identity_attack)))
colnames(compare_means_twoX) <- c("Pre", "Post")

kable(compare_means_twoX[-1,]) %>%
  kable_material("hover")
```

## Appendix 4: Descriptive stats of other communities (4) {.smaller}

r/WitchesVSPatriarchy

```{r compare-pre-post-wvsp, echo = F, results = T}
compare_means <- t(wvsp_bsts %>% group_by(post)%>%
                            summarise(Toxicity = mean(toxicity),
                                   Severe_Toxicity = mean(severe_toxicity),
                                   Obscene = mean(obscene),
                                   Threat = mean(threat),
                                   Insult = mean(insult),
                                   Identity_attack = mean(identity_attack)))
colnames(compare_means) <- c("Pre", "Post")

kable(compare_means[-1,]) %>%
  kable_material("hover")
```

## Appendix 4: Descriptive stats of other communities (5) {.smaller}

r/TrollXChromosomes

```{r compare-pre-post-trollX, echo = F, results = T}
compare_means <- t(trollX_bsts %>% group_by(post)%>%
                            summarise(Toxicity = mean(toxicity),
                                   Severe_Toxicity = mean(severe_toxicity),
                                   Obscene = mean(obscene),
                                   Threat = mean(threat),
                                   Insult = mean(insult),
                                   Identity_attack = mean(identity_attack)))
colnames(compare_means) <- c("Pre", "Post")

kable(compare_means[-1,]) %>%
  kable_material("hover")
```

## Appendix 4: Descriptive stats of other communities (6) {.smaller}

r/mgtow

```{r compare-pre-post-mgtow, echo = F, results = T}
compare_means_mgtow <- t(mgtow_bsts %>% group_by(post)%>%
                            summarise(Toxicity = mean(toxicity),
                                   Severe_Toxicity = mean(severe_toxicity),
                                   Obscene = mean(obscene),
                                   Threat = mean(threat),
                                   Insult = mean(insult),
                                   Identity_attack = mean(identity_attack)))
colnames(compare_means_mgtow) <- c("Pre", "Post")

kable(compare_means_mgtow[-1,]) %>%
  kable_material("hover")
```

## Appendix 4: Descriptive stats of other communities (7) {.smaller}

r/TheRedPill

```{r compare-pre-post-trp, echo = F, results = T}
compare_means_trp <- t(trp_bsts %>% group_by(post)%>%
                            summarise(Toxicity = mean(toxicity),
                                   Severe_Toxicity = mean(severe_toxicity),
                                   Obscene = mean(obscene),
                                   Threat = mean(threat),
                                   Insult = mean(insult),
                                   Identity_attack = mean(identity_attack)))
colnames(compare_means_trp) <- c("Pre", "Post")

kable(compare_means_trp[-1,]) %>%
  kable_material("hover")
```

## Appendix 5: BSTS for Toxicity - Score Mean (1)

```{r bsts-model-toxicity-1, echo = F, results = T}
toxic_m <- cbind(
  fds_bsts["toxicity"], 
  fm_bsts["toxicity"], fm_subsc["subscriber"],
  twoX_bsts["toxicity"], twoX_subsc["subscriber"],
  trollX_bsts["toxicity"], trollX_subsc["subscriber"],
  mgtow_bsts["toxicity"], mgtow_subsc["subscriber"],
  trp_bsts["toxicity"], trp_subsc["subscriber"]
)

names(toxic_m) <- c("Y", "fm_tox", "fm_subsc", "twoX_tox","twoX_subsc", 
                    "trollX_tox", "troll_subsc", "mgtow_tox", "mgtow_subsc",
                    "trp_tox", "trp_subsc")

toxic_m_impact <- CausalImpact(toxic_m, pre_period, post_period, 
                                         model.args = list(niter = 5000, nseasons = 7))

plot(toxic_m_impact)
```

## Appendix 5: BSTS for Toxicity - Score Mean (2)

```{r bsts-model-toxicity-2, echo - F, results = T}
summary(toxic_m_impact)
```

## Appendix 5: BSTS for Toxicity - Log Score Mean (3)

```{r bsts-toxicity-log-1, echo = F, results = T}
l.toxic_m <- toxic_m %>% 
  mutate(Y = log(Y),
         l.fm_tox = log(fm_tox), 
         l.twoX_tox = log(twoX_tox),
         l.trollX_tox = log(trollX_tox),
         l.mgtow_tox = log(mgtow_tox),
         l.trp_tox = log(trp_tox))

l.toxic_m_impact <- CausalImpact(l.toxic_m, pre_period,
                                         post_period, 
                                         model.args = list(niter = 5000, nseasons = 7))

plot(l.toxic_m_impact)
```

## Appendix 5: BSTS for Toxicity - Log Score Mean (4)

```{r bsts-toxicity-log-2, echo = F, results = T}
summary(l.toxic_m_impact)
```

## Appendix 5: BSTS for Toxicity - Percentage (5)

```{r bsts-toxicity-perc-1, echo = F, results= T}
toxic_p <- cbind(
  fds_bsts["toxicity_p"], 
  fm_bsts["toxicity_p"], fm_subsc["subscriber"],
  twoX_bsts["toxicity_p"], twoX_subsc["subscriber"],
  trollX_bsts["toxicity_p"], trollX_subsc["subscriber"],
  mgtow_bsts["toxicity_p"], mgtow_subsc["subscriber"],
  trp_bsts["toxicity_p"], trp_subsc["subscriber"]
)

names(toxic_p) <- c("Y", "fm_tox", "fm_subsc", "twoX_tox","twoX_subsc", 
                    "trollX_tox", "troll_subsc", "mgtow_tox", "mgtow_subsc",
                    "trp_tox", "trp_subsc")

toxic_p_impact <- CausalImpact(toxic_p, pre_period, post_period, 
                                         model.args = list(niter = 5000, nseasons = 7))

plot(toxic_p_impact)
```

## Appendix 5: BSTS for Toxicity - Percentage (5)

```{r bsts-toxicity-perc-2, echo = F, results= T}
summary(toxic_p_impact)
```

## Appendix 5: BSTS for Toxicity - Summary {.smaller .scrollable}

|                           | 95% Confidence <br>Interval | Posterior <br>Prob. Of <br>Causal Effect |
|--------------------|----------------------|------------------------------|
| Toxicity - Score Mean     | \[-0.036, 0.022\]           | 90%                                      |
| Toxicity - Log Score Mean | \[-0.14, 0.059\]            | 94%                                      |
| Toxicity - Percentage     | \[-0.037, 0.034\]           | 84%                                      |
