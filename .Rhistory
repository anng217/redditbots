x0 <- exp(lnx)
nu0 <- e* sqrt(1+2*x)
y0 <- 1 + 2*x0 + nu0
reg0 <- lm(y0~x0)
reg0
yG <- y0/sqrt(1+2*x)
xG <- x0/sqrt(1+2*x)
regG <- lm(yG ~ xG)
regG
a0 <- c(rep(0,j))
b0 <- c(rep(0,j))
for (i in 1:j) {
set.seed(i+567)
lnx <- rnorm(c, mean = 0, sd = 1)
x <- exp(lnx)
e <- rnorm(c, mean = 0, sd = 1)
nu <-  e* sqrt(1+2*x)
y <- 1 + 2*x + nu
reg0 <- lm(y~x)
a0[i] <- reg0$coefficients[1]
b0[i] <- reg0$coefficients[2]
}
aG <- c(rep(0,j))
bG <- c(rep(0,j))
for (i in 1:j) {
set.seed(i+123)
lnx <- rnorm(c, mean = 0, sd = 1)
x <- exp(lnx)
e <- rnorm(c, mean = 0, sd = 1)
nu <-  e* sqrt(1+2*x)
y <- 1 + 2*x + nu
yG <- y/sqrt(1+2*x)
xG <- x/sqrt(1+2*x)
regG <- lm(yG ~ xG)
aG[i] <- regG$coefficients[1]
bG[i] <- regG$coefficients[2]
}
a0d <- density(a0)
b0d <- density(b0)
aGd <- density(aG)
bGd <- density(bG)
par(mfrow=c(2,2))
plot(a0d,
main = 'Alpha in OLS')+
abline(v = mean(a0),col = 'blue')
plot(b0d,
main = 'Beta in OLS')+
abline(v = mean(b0),col = 'blue')
plot(aGd,
main = 'Alpha in GLS')+
abline(v = mean(aGd),col = 'blue')
plot(bGd,
main = 'Beta in GLS')+
abline(v = mean(bGd),col = 'blue')
var(a0)
var(aG)
var(b0)
var(bG)
var(nu0)
yG <- y0/sqrt(1+2*x)
xG <- x0/sqrt(1+2*x)
regG <- lm(yG ~ xG)
regG
var(nu0)
sqrt(var(nu0))
sqrt(1+2*x)
sqrt(sqrt(1+2*x))
mean(sqrt(1+2*x))
set.seed(100)
c <- seq(-2.5, 2.5, by = 0.5)
lnx <- rnorm(c, mean = 0, sd = 1)
x <- exp(lnx)
e <- rnorm(c, mean = 0, sd = 1)
y <- 1 + 2*x + e
reg <- lm(y~x)
reg
j <- 500
a <- c(rep(0,j))
b <- c(rep(0,j))
c <- seq(-5, 5, by = .1)
for (i in 1:j) {
set.seed(i+666)
lnx <- rnorm(c, mean = 0, sd = 1)
x <- exp(lnx)
e <- rnorm(c, mean = 0, sd = 1)
y <- 1 + 2*x + e
reg <- lm(y~x)
a[i] <- reg$coefficients[1]
b[i] <- reg$coefficients[2]
}
mean(a)
mean(b)
length(c)
ad <- density(a)
bd <- density(b)
par(mfrow=c(1,2))
plot(ad,
main = 'Distribution for alpha')+
abline(v = mean(a),col = 'blue')
plot(bd,
main = 'Distribution for beta')+
abline(v = mean(b),col = 'blue')
seed <- .Random.seed
lnx <- rnorm(c, mean = 0, sd = 1)
x0 <- exp(lnx)
nu0 <- e* sqrt(1+2*x)
y0 <- 1 + 2*x0 + nu0
reg0 <- lm(y0~x0)
reg0
yG <- y0/sqrt(1+2*x)
xG <- x0/sqrt(1+2*x)
regG <- lm(yG ~ xG)
regG
a0 <- c(rep(0,j))
b0 <- c(rep(0,j))
for (i in 1:j) {
set.seed(i+567)
lnx <- rnorm(c, mean = 0, sd = 1)
x <- exp(lnx)
e <- rnorm(c, mean = 0, sd = 1)
nu <-  e* sqrt(1+2*x)
y <- 1 + 2*x + nu
reg0 <- lm(y~x)
a0[i] <- reg0$coefficients[1]
b0[i] <- reg0$coefficients[2]
}
aG <- c(rep(0,j))
bG <- c(rep(0,j))
for (i in 1:j) {
set.seed(i+123)
lnx <- rnorm(c, mean = 0, sd = 1)
x <- exp(lnx)
e <- rnorm(c, mean = 0, sd = 1)
nu <-  e* sqrt(1+2*x)
y <- 1 + 2*x + nu
yG <- y/sqrt(1+2*x)
xG <- x/sqrt(1+2*x)
regG <- lm(yG ~ xG)
aG[i] <- regG$coefficients[1]
bG[i] <- regG$coefficients[2]
}
a0d <- density(a0)
b0d <- density(b0)
aGd <- density(aG)
bGd <- density(bG)
par(mfrow=c(2,2))
plot(a0d,
main = 'Alpha in OLS')+
abline(v = mean(a0),col = 'blue')
plot(b0d,
main = 'Beta in OLS')+
abline(v = mean(b0),col = 'blue')
plot(aGd,
main = 'Alpha in GLS')+
abline(v = mean(aGd),col = 'blue')
plot(bGd,
main = 'Beta in GLS')+
abline(v = mean(bGd),col = 'blue')
var(a0)
var(aG)
var(b0)
var(bG)
mean(a0)
mean(aG)
mean(b0)
mean(bG)
babe <- 'dumb'
install.packages("styler")
install.packages('languageserver')
library('languageserver')
remove.packages("styler", lib="~/R/win-library/4.1")
remove.packages("languageserver", lib="~/R/win-library/4.1")
# common procedure
rm(list = ls())
.libPaths()
.libPaths(.libPaths()[2])
library(data.table)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(RColorBrewer)
library(viridis)
library(sqldf)
library(plotly)
library(viridis)
library(paletteer)
library(reshape2)
library(lubridate)
library(CausalImpact)
setwd("E:/github/redditbots")
getwd()
subscriber_num <- function(source_dir, from_date, to_date) {
df <- read_csv(source_dir)
df <- df %>%
dplyr::select(created_utc, subreddit_subscribers) %>%
mutate(time = as_date(lubridate::as_datetime(created_utc))) %>%
group_by(time) %>%
summarise(max = max(subreddit_subscribers)) %>%
filter(time >= as.Date(from_date) & time <= as.Date(to_date))
# from = "2019-09-28", to = "2019-11-27"
names(df)[2] <- "subscriber"
return(df)
}
clean <- function(source_dir) {
df <- read_csv(source_dir)
df <- df %>%
mutate(time = as_date(lubridate::as_datetime(created_utc))) %>%
group_by(time) %>%
summarise(
toxicity = mean(toxicity),
severe_toxicity = mean(severe_toxicity),
obscene = mean(obscene),
identity_attack = mean(identity_attack),
insult = mean(insult), threat = mean(threat),
# sexual_explicit_m = mean(sexual_explicit),
toxicity_p = mean(toxicity_flag),
severe_toxicity_p = mean(severe_toxicity_flag),
obscene_p = mean(obscene_flag),
identity_attack_p = mean(identity_attack_flag),
insult_p = mean(insult_flag),
# exual_explicit_p = mean(sexual_explicit_flag),
threat_p = mean(threat_flag)
)
return(df)
}
cross_users <- function(source_dir1, df1_name, source_dir2, df2_name) {
df1 <- read_csv(source_dir1)
df2 <- read_csv(source_dir2)
df1 %>%
group_by(author) %>%
summarise(num_coms = n())
df2 %>%
group_by(author) %>%
summarise(num_coms = n())
df <- left_join(df1, df2, by = author, suffix = c(df1_name, df2_name))
return(df)
}
fds_df <- clean("E:/github/redditbots/data/fds/fds_res.csv")
fm_df <- clean("E:/github/redditbots/data/control-fds/feminism_res.csv")
twoX_df <- clean("E:/github/redditbots/data/control-fds/twoX_res.csv")
wvsp_df <- clean("E:/github/redditbots/data/control-fds/wvsp_res.csv")
trollX_df <- clean("E:/github/redditbots/data/control-fds/trollX_res.csv")
mgtow_df <- clean("E:/github/redditbots/data/control-fds/MGTOW_res.csv")
trp_df <- clean("E:/github/redditbots/data/control-fds/TheRedPill_res.csv")
fds_subsc <- subscriber_num(
source_dir = "E:/github/redditbots/data/fds/fds_subm.csv",
from_date = "2019-09-28", to_date = "2019-11-27"
)
fm_subsc <- subscriber_num(
source_dir = "E:/github/redditbots/data/control-fds/feminism_subsc.csv",
from_date = "2019-09-28", to_date = "2019-11-27"
)
twoX_subsc <- subscriber_num(
source_dir = "E:/github/redditbots/data/control-fds/twoX_subsc.csv",
from_date = "2019-09-28", to_date = "2019-11-27"
)
wvsp_subsc <- subscriber_num(
source_dir = "E:/github/redditbots/data/control-fds/wvsp_subsc.csv",
from_date = "2019-09-28", to_date = "2019-11-27"
)
trollX_subsc <- subscriber_num(
source_dir = "E:/github/redditbots/data/control-fds/TrollX_subsc.csv",
from_date = "2019-09-28", to_date = "2019-11-27"
)
trp_subsc <- subscriber_num(
source_dir = "E:/github/redditbots/data/control-fds/trp_subsc.csv",
from_date = "2019-09-28", to_date = "2019-11-27"
)
mgtow_subsc <- subscriber_num(
source_dir = "E:/github/redditbots/data/control-fds/MGTOW_subsc.csv",
from_date = "2019-09-28", to_date = "2019-11-27"
)
pre_period <- c(1, 30)
post_period <- c(31, 61)
df.sub <- cbind(log(fds_subsc["subscriber"]),
log(fm_subsc["subscriber"]),
log(twoX_subsc["subscriber"]),
log(trollX_subsc["subscriber"])
)
names(df.sub) <- c(
"Y", "sub", "sub2","sub3"
)
mod.sub <- CausalImpact(df.sub, pre_period,
post_period,
model.args = list(niter = 5000, nseasons = 7)
) # nolint
plot(mod.sub)
source("E:/github/redditbots/BSTS.r")
# fds as focal group
## fds ~ fm + twoX + trollX ----
### * identity attack: fds ~ fm + twoX + trollX ----
identity_attack_m <- cbind(
fds_df["identity_attack"],
fm_df["identity_attack"], fm_subsc["subscriber"],
twoX_df["identity_attack"], twoX_subsc["subscriber"],
trollX_df["identity_attack"], trollX_subsc["subscriber"]
)
wgtow <- clean("E:/github/redditbots/data/wgotw/wgtow_res.csv")
# ________________________________ ----
# WGTOW AS FOCAL COMMUNITY ----
## Data Cleaning ----
wgtow_df <- clean("E:/github/redditbots/data/wgtow/wgtow_res.csv")
wgtow_df <- clean("E:/github/redditbots/data/wgtow/wgtow_res.csv")
# ________________________________ ----
# WGTOW AS FOCAL COMMUNITY ----
## Data Cleaning ----
wgtow_df <- clean("E:/github/redditbots/data/wgtow/wgtow_res.csv")
View(mgtow_df)
## Take Subscribers ----
mgtow_subsc <- subscriber_num(
source_dir = "E:/github/redditbots/data/wgtow/wgtow_subm.csv",
from_date = "2019-09-28", to_date = "2019-11-27"
)
## Take Subscribers ----
mgtow_subsc <- subscriber_num(
source_dir = "E:/github/redditbots/data/wgtow/wgtow_clean_subm.csv",
from_date = "2019-09-28", to_date = "2019-11-27"
)
View(wgtow_df)
## Take Subscribers ----
mgtow_subsc <- subscriber_num(
source_dir = "E:/github/redditbots/data/wgtow/wgtow_subm.csv",
from_date = "2019-09-28", to_date = "2019-11-27"
)
mgtow_subsc <- subscriber_num(
source_dir = "E:/github/redditbots/data/wgtow/wgtow_subm.csv",
from_date = "2019-09-28", to_date = "2019-11-27"
)
View(mgtow_subsc)
View(mgtow_df)
wgtow_df <- clean("E:/github/redditbots/data/wgtow/wgtow_res.csv")
View(mgtow_df)
View(wgtow_df)
View(mgtow_df)
mgtow_subsc <- subscriber_num(
source_dir = "E:/github/redditbots/data/wgtow/wgtow_subm.csv",
from_date = "2019-09-28", to_date = "2019-11-27"
)
View(mgtow_subsc)
View(wgtow_df)
mgtow_subsc <- subscriber_num(
source_dir = "E:/github/redditbots/data/wgtow/wgtow_subm_clean.csv",
from_date = "2021-03-30", to_date = "2021-05-29"
)
## Take Subscribers ----
mgtow_subsc <- subscriber_num(
source_dir = "E:/github/redditbots/data/wgtow/wgtow_clean_subm.csv",
from_date = "2021-03-30", to_date = "2021-05-29"
)
View(mgtow_subsc)
wgtow_df <- clean("E:/github/redditbots/data/wgtow/wgtow_res.csv")
## Take Subscribers ----
wgtow_subsc <- subscriber_num(
source_dir = "E:/github/redditbots/data/wgtow/wgtow_clean_subm.csv",
from_date = "2021-03-30", to_date = "2021-05-29"
)
mgtow_subsc <- subscriber_num(
source_dir = "E:/github/redditbots/data/control-fds/mgtow_subsc.csv",
from_date = "2019-09-28", to_date = "2019-11-27"
)
# ________________________________ ----
# WVSP AS FOCAL COMMUNITY ----
## Data Cleaning ----
wvsp_df <- clean("E:/github/redditbots/data/wvsp/wvsp_res.csv")
wvsp_subsc <- subscriber_num(
source_dir = "E:/github/redditbots/data/witchesvspatriarchy/wvsp_clean_subm.csv",
from_date = "2021-03-30", to_date = "2021-05-29"
)
wvsp_subsc <- subscriber_num(
source_dir = "E:/github/redditbots/data/witchesvspatriarchy/wvsp_clean_subm.csv",
from_date = "2020-11-22", to_date = "2020-01-21"
)
wvsp_subsc <- subscriber_num(
source_dir = "E:/github/redditbots/data/witchesvspatriarchy/wvsp_clean_subm.csv",
from_date = "2020-11-22", to_date = "2021-01-21"
)
View(wvsp_subsc)
plot(identity_attack_m_impact)
identity_attack_m <- cbind(
fds_df["identity_attack"],
fm_df["identity_attack"], fm_subsc["subscriber"],
twoX_df["identity_attack"], twoX_subsc["subscriber"],
trollX_df["identity_attack"], trollX_subsc["subscriber"]
)
names(identity_attack_m) <- c("Y", "fm_ia", "fm_subsc", "twoX_ia",
"twoX_subsc", "trollX_ia", "troll_subsc")
identity_attack_m_impact <- CausalImpact(identity_attack_m, pre_period, post_period,model.args = list(niter = 5000, nseasons = 7))
plot(identity_attack_m_impact)
summary(identity_attack_m_impact)
identity_attack_m <- cbind(
fds_df["identity_attack"],
twoX_df["identity_attack"], twoX_subsc["subscriber"],
fm_df["identity_attack"], fm_subsc["subscriber"],
trollX_df["identity_attack"], trollX_subsc["subscriber"],
trp_df["identity_attack"], trp_subsc["subscriber"],
mgtow_df["identity_attack"], mgtow_subsc["subscriber"])
names(identity_attack_m) <- c("Y", "twoX", "twoX_subsc","fm_ia", "fm_subsc",
"trollX_ia", "troll_subsc", "trp", "trp_subsc", "mgtow_ia",
"mgtow_subsc") #, "trollX_ia", "troll_subsc")
identity_attack_m_impact <- CausalImpact(identity_attack_m, pre_period, post_period,model.args = list(niter = 10000, nseasons = 7))
plot(identity_attack_m_impact)
summary(identity_attack_m_impact)
library(rdd)
install.packages("rdd")
library(rdd)
library(fixest)
install.packages("fixest")
library(fixest)
bw <- with(fds_df, IKbandwidth(relative_day, toxicity, cutpoint = -0.5))
relative_day <-  seq(-30, 30, by=1)
df <- cbind(fds_df,relative_day)
View(df)
fds_df <- cbind(fds_df,relative_day)
bw <- with(fds_df, IKbandwidth(relative_day, toxicity, cutpoint = -0.5))
rdd_simple <- RDestimate(toxicity ~ relative_day, data = df, cutpoint = -0.5)
summary(rdd_simple)
gc()
print.RD
print.RD(rdd_simple)
summary(rdd_simple)
rdd_simple <- RDestimate(toxicity ~ relative_day, data = df, cutpoint = -0.5, bw = bw)
summary(rdd_simple)
insult_m <- cbind(
fds_df["insult"],
twoX_df["insult"], twoX_subsc["subscriber"],
fm_df["insult"], fm_subsc["subscriber"],
trollX_df["insult"], trollX_subsc["subscriber"],
trp_df["insult"], trp_subsc["subscriber"],
mgtow_df["insult"], mgtow_subsc["subscriber"])
names(insult_m) <- c("Y", "twoX", "twoX_subsc","fm_ia", "fm_subsc",
"trollX_ia", "troll_subsc", "trp", "trp_subsc", "mgtow_ia",
"mgtow_subsc") #, "trollX_ia", "troll_subsc")
insult_m_impact <- CausalImpact(insult, pre_period, post_period,model.args = list(niter = 10000, nseasons = 7))
plot(insult_m_impact)
summary(insult_m_impact)
### * insult ----
insult_m <- cbind(
fds_df["insult"],
twoX_df["insult"], twoX_subsc["subscriber"],
fm_df["insult"], fm_subsc["subscriber"],
trollX_df["insult"], trollX_subsc["subscriber"],
trp_df["insult"], trp_subsc["subscriber"],
mgtow_df["insult"], mgtow_subsc["subscriber"])
names(insult_m) <- c("Y", "twoX", "twoX_subsc","fm_ia", "fm_subsc",
"trollX_ia", "troll_subsc", "trp", "trp_subsc", "mgtow_ia",
"mgtow_subsc") #, "trollX_ia", "troll_subsc")
insult_m_impact <- CausalImpact(insult, pre_period, post_period,model.args = list(niter = 10000, nseasons = 7))
insult_m_impact <- CausalImpact(insult_m, pre_period, post_period,model.args = list(niter = 10000, nseasons = 7))
plot(insult_m_impact)
summary(insult_m_impact)
View(df)
View(df)
df$post <- ifelse(df$relative_day <0, 0, 1)
bw <- with(fds_df, IKbandwidth(relative_day, toxicity, cutpoint = -0.5))
rdd_simple <- RDestimate(toxicity ~ relative_day, data = df, cutpoint = -0.5, bw = bw)
summary(rdd_simple)
bw <- with(fds_df, IKbandwidth(relative_day, toxicity, cutpoint = -0.5))
name(df)
names(df)
rdd_simple <- RDestimate(toxicity ~ relative_day, data = df, cutpoint = -0.5, bw = bw)
summary(rdd_simple)
rdd_simple
print(rdd_simple)
summary(rdd_simple)
rdd_simple <- RDestimate(toxicity ~ relative_day, data = df, cutpoint = -0.5)
summary(rdd_simple)
rdd_simple <- RDestimate(toxicity ~ relative_day, data = df, cutpoint = -0.5)
summary(rdd_simple)
rdd_simple
library(rdd)
gc()
rdd_simple <- RDestimate(toxicity ~ relative_day, data = df, cutpoint = -0.5)
rdd_simple
View(rdd_simple)
View(df)
df <- read.csv('E :/github/redditbots/fds/fds_res.csv')
df$date <-  as.Date(df$Date, "%Y-%m-%d")
df <- read.csv('E :/github/redditbots/data/fds/fds_res.csv')
df$date <-  as.Date(df$Date, "%Y-%m-%d")
df <- read.csv('E :/github/redditbots/data/fds/fds_res.csv')
df <- read.csv("E:/github/redditbots/data/fds/fds_res.csv")
df$date <-  as.Date(df$Date, "%Y-%m-%d")
df$post_tt <- ifelse(df$Rel_Date < 0, 0, 1)
df$date <-  as.Date(df$Date, "%Y-%m-%d")
View(df)
df$date <-  as.Date(df$created_utc, "%Y-%m-%d")
df$post_tt <- ifelse(df$Rel_Date < 0, 0, 1)
gc()
df <- read.csv("E:/github/redditbots/data/fds/fds_res.csv")
df$date <-  as.Date(df$created_utc, "%Y-%m-%d")
df$post_tt <- ifelse(df$Rel_Date < 0, 0, 1)
df$relative_day <- difftime(df$date,as.Date('2019-10-28', "%Y-%m-%d"), units = "days")
df <- read.csv("E:/github/redditbots/data/fds/fds_res.csv")
df$date <-  as.Date(df$created_utc, "%Y-%m-%d")
df$relative_day <- difftime(df$date,as.Date('2019-10-28', "%Y-%m-%d"), units = "days")
df$relative_day <- difftime(df$date,as.Date('2019-10-28', "%Y-%m-%d"), units = "days")
View(df)
df$relative_day <- as.numeric(df$relative_day
df$relative_day <- as.numeric(df$relative_day)
df$relative_day <- as.numeric(df$relative_day)
View(df)
bw <- with(fds_df, IKbandwidth(relative_day, toxicity, cutpoint = -0.5))
rdd_simple <- RDestimate(toxicity ~ relative_day, data = df, cutpoint = -0.5)
View(df)
rdd_simple <- RDestimate(toxicity ~ relative_day, data = df, cutpoint = -0.5)
bw <- with(fds_df, IKbandwidth(relative_day, toxicity, cutpoint = -0.5))
rdd_simple <- RDestimate(toxicity ~ relative_day, data = fds_df, cutpoint = -0.5)
print(rdd_simple)
summary(rdd_simple)
rdd_simple <- RDestimate(toxicity ~ relative_day, data = df, cutpoint = -0.5)
bw <- with(df, IKbandwidth(relative_day, toxicity, cutpoint = -0.5))
rdd_simple <- RDestimate(toxicity ~ relative_day, data = df, cutpoint = 0)
